// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SmartFlow.Shared.Data;
using SmartFlow.Shared.Enums;
using SmartFlow.Shared.Models;
using SmartFlow.Shared.Models.Ede.Enums;
using System;

namespace SmartFlow.Shared.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20180116225233_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("SmartFlow.Shared.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<int>("Order");

                    b.Property<int?>("QuestionId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChapterDeclarationType");

                    b.Property<int>("ChapterIdentifier");

                    b.Property<int?>("DeclarationId");

                    b.Property<int>("Order");

                    b.Property<int?>("ProfileId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("DeclarationId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Chapter");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.ConditionalQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AnswerId");

                    b.Property<int>("ConditionQuestion");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.ToTable("ConditionalQuestion");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Declaration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedDate");

                    b.Property<string>("DeNo");

                    b.Property<int>("DeclarationType");

                    b.Property<string>("Language");

                    b.Property<string>("LastUpdatedDate");

                    b.Property<int>("ProfileId");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Declarations");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedDate");

                    b.Property<byte[]>("Image");

                    b.Property<int>("Index");

                    b.Property<string>("Language");

                    b.Property<string>("LastUpdatedDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnswerCode");

                    b.Property<string>("AnswerText");

                    b.Property<int>("ChapterId");

                    b.Property<int?>("ConfigId");

                    b.Property<bool>("IsVisible");

                    b.Property<int>("Order");

                    b.Property<int>("QuestionIdentifier");

                    b.Property<string>("QuestionKey");

                    b.Property<int>("SelectedAnswerIndex");

                    b.Property<string>("Text");

                    b.Property<int>("Type");

                    b.Property<bool>("isMandatory");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.HasIndex("ConfigId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.ValidationConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AllowOnlyNumeric");

                    b.Property<bool>("IsRequired");

                    b.Property<DateTime>("MaxDate");

                    b.Property<int>("MaxLength");

                    b.Property<DateTime>("MinDate");

                    b.Property<int>("MinLength");

                    b.Property<bool>("ValidateContactNumber");

                    b.Property<bool>("ValidateEmailAddress");

                    b.Property<bool>("ValidateSpecialCharacters");

                    b.Property<bool>("ValidateSpecialCharactersName");

                    b.HasKey("Id");

                    b.ToTable("ValidationConfig");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Answer", b =>
                {
                    b.HasOne("SmartFlow.Shared.Models.Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Chapter", b =>
                {
                    b.HasOne("SmartFlow.Shared.Models.Declaration")
                        .WithMany("Chapters")
                        .HasForeignKey("DeclarationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartFlow.Shared.Models.Profile")
                        .WithMany("Chapters")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.ConditionalQuestion", b =>
                {
                    b.HasOne("SmartFlow.Shared.Models.Answer")
                        .WithMany("ConditionalQuestion")
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Declaration", b =>
                {
                    b.HasOne("SmartFlow.Shared.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Question", b =>
                {
                    b.HasOne("SmartFlow.Shared.Models.Chapter")
                        .WithMany("Questions")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartFlow.Shared.Models.ValidationConfig", "Config")
                        .WithMany()
                        .HasForeignKey("ConfigId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
