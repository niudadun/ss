// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SmartFlow.Shared.Data;
using SmartFlow.Shared.Models;
using SmartFlow.Shared.Models.Ede.Enums;
using System;

namespace SmartFlow.Shared.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("SmartFlow.Shared.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Order");

                    b.Property<int?>("QuestionId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DeclarationId");

                    b.Property<int>("Order");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("DeclarationId");

                    b.ToTable("Chapter");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Declaration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedDate");

                    b.Property<int>("DeclarationType");

                    b.Property<string>("Language");

                    b.Property<string>("LastUpdatedDate");

                    b.Property<int?>("ProfileId");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Declarations");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryOfBirth");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Gender");

                    b.Property<DateTime>("LastModifiedDate");

                    b.Property<string>("Name");

                    b.Property<string>("Nationality");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnswerText");

                    b.Property<int>("ChapterId");

                    b.Property<int?>("ConfigId");

                    b.Property<int?>("DeclarationId");

                    b.Property<bool>("IsHidden");

                    b.Property<bool>("IsRequired");

                    b.Property<int>("Order");

                    b.Property<string>("Text");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ConfigId");

                    b.HasIndex("DeclarationId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.ValidationConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MaxDate");

                    b.Property<int>("MaxLength");

                    b.Property<int>("MinLength");

                    b.HasKey("Id");

                    b.ToTable("ValidationConfig");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Answer", b =>
                {
                    b.HasOne("SmartFlow.Shared.Models.Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Chapter", b =>
                {
                    b.HasOne("SmartFlow.Shared.Models.Declaration")
                        .WithMany("Chapters")
                        .HasForeignKey("DeclarationId");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Declaration", b =>
                {
                    b.HasOne("SmartFlow.Shared.Models.Profile", "Profile")
                        .WithMany("Declarations")
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("SmartFlow.Shared.Models.Question", b =>
                {
                    b.HasOne("SmartFlow.Shared.Models.ValidationConfig", "Config")
                        .WithMany()
                        .HasForeignKey("ConfigId");

                    b.HasOne("SmartFlow.Shared.Models.Declaration")
                        .WithMany("Questions")
                        .HasForeignKey("DeclarationId");
                });
#pragma warning restore 612, 618
        }
    }
}
